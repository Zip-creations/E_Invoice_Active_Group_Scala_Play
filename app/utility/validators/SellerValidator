package utility

import cats.data._
import cats.data.Validated._
import cats.syntax.all._

sealed trait SellerValidator {
    def validateName(name: String): Validated[Seq[ErrorMessage], String] = {
        Validated.cond(
            true,
            name,
            Seq(ArgumentError)
        )
    }
    def validateAddress(address: Address): Validated[Seq[ErrorMessage], Address] = {
        AddressValidator.validateAddress(address)
    }
    def validateSeller(address: Address): Validated[Seq[ErrorMessage], InvoiceSeller] = {
        (
            validateName("test"),
            validateName("test"),
            validateAddress(address),
            validateName("test"),
            validateName("test"),
            validateName("test"),
            validateName("test")
        ).mapN(InvoiceSeller.apply)
    }
}
object SellerValidator extends SellerValidator

